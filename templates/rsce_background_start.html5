<?php
if(!function_exists('hex2rgba')) {
    function hex2rgba($color, $opacity = false)
    {
        $default = 'rgb(0,0,0)';

        //Return default if no color provided
        if (empty($color)) {
            return $default;
        }

        //Sanitize $color if "#" is provided
        if ($color[0] == '#') {
            $color = substr($color, 1);
        }

        //Check if color has 6 or 3 characters and get values
        if (strlen($color) == 6) {
            $hex = array($color[0] . $color[1], $color[2] . $color[3], $color[4] . $color[5]);
        } elseif (strlen($color) == 3) {
            $hex = array($color[0] . $color[0], $color[1] . $color[1], $color[2] . $color[2]);
        } else {
            return $default;
        }

        //Convert hexadec to rgb
        $rgb = array_map('hexdec', $hex);

        //Check if opacity is set(rgba or rgb)
        if ($opacity) {
            if (abs($opacity) > 1) {
                $opacity = 1.0;
            }
            $output = 'rgba(' . implode(",", $rgb) . ',' . $opacity . ')';
        } else {
            $output = 'rgb(' . implode(",", $rgb) . ')';
        }

        //Return rgb(a) color string
        return $output;
    }
}

$image = $this->arrData['getImageObject']($this->image1);

$style = '';
if ($image) {
    $style .= 'background-image: url(' . $image->src . '); ';
    $style .= 'background-repeat: no-repeat; ';
}

if ($this->backgroundcolor1) {
    $opacity = ($this->backgroundcolor1_opacity)
        ? $this->backgroundcolor1_opacity
        : 1.0;

    $backgroundColor = hex2rgba($this->backgroundcolor1, $opacity);

    $style .= 'background-color: ' . $backgroundColor . '; ';
}

?>
<div class="jamp-background<?php echo ($this->class) ? ' ' . $this->class : ''; ?> block"<?php echo ($style) ? ' style="' . trim($style) . '"' : ''; ?><?php echo $this->cssID ?>>
    <div class="jamp-background-inner-wrapper">
    	<div class="article-inner-wrapper">